<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.riil.base.policy.impl.dao.PolicyBaseInfoDAO">

	<resultMap id="PolicyBaseInfoResultMap" type="com.riil.base.resmodel.pojo.policy.PolicyPojo">
		<result property="createTime" column="C_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="createUser" column="C_CREATE_USER" javaType="string" jdbcType="VARCHAR" />
		<result property="desc" column="C_DESC" javaType="string" jdbcType="VARCHAR" />
		<result property="fileName" column="C_FILE_NAME" javaType="string" jdbcType="VARCHAR" />
		<result property="frequency" column="C_FREQUENCY" javaType="string" jdbcType="VARCHAR" />
		<result property="id" column="C_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="inUse" column="C_IN_USE" javaType="byte" jdbcType="TINYINT" />
		<result property="isDefault" column="C_IS_DEFAULT" javaType="byte" jdbcType="TINYINT" />
		<result property="isFactory" column="C_IS_FACTORY" javaType="byte" jdbcType="TINYINT" />
		<result property="isMain" column="C_IS_MAIN" javaType="byte" jdbcType="TINYINT" />
		<result property="mainPolicyId" column="C_MAIN_POLICY_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="modelId" column="C_MODEL_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="modelName" column="C_MODEL_NAME" javaType="string" jdbcType="VARCHAR" />
		<result property="treeNodeId" column="C_TREE_NODE_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="name" column="C_NAME" javaType="string" jdbcType="VARCHAR" />
		<result property="nameEn" column="C_NAME_EN" javaType="string" jdbcType="VARCHAR" />
		<result property="policyType" column="C_POLICY_TYPE" javaType="string" jdbcType="VARCHAR" />
		<result property="updateTime" column="C_UPDATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="updateUser" column="C_UPDATE_USER" javaType="string" jdbcType="VARCHAR" />
		<result property="userDomainId" column="C_USER_DOMAIN_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="publishTime" column="C_PUBLISH_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="publishUser" column="C_PUBLISH_USER" javaType="string" jdbcType="VARCHAR" />
		<result property="resTypeId" column="C_RES_TYPE_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="resTypeName" column="C_RES_TYPE_NAME" javaType="string" jdbcType="VARCHAR" />
		<result property="separatorCol" column="C_SEPARATOR_COL" javaType="string" jdbcType="VARCHAR" />
		<result property="separatorRow" column="C_SEPARATOR_ROW" javaType="string" jdbcType="VARCHAR" />
		<result property="originalPolicyId" column="C_ORIGINAL_POLICY_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="bandwidthType" column="c_bandwidth_type" javaType="string" jdbcType="VARCHAR" />
		<result property="args" column="C_ARGS" javaType="string" jdbcType="VARCHAR" />
		<result property="tag1" column="C_TAG1" javaType="string" jdbcType="VARCHAR" />
		<result property="tag2" column="C_TAG2" javaType="string" jdbcType="VARCHAR" />
		<result property="tag3" column="C_TAG3" javaType="string" jdbcType="VARCHAR" />
		<result property="tag4" column="C_TAG4" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="PolicyResRelExtResultMap" type="com.riil.base.policy.pojo.PolicyResRelExt">
		<result property="id" column="C_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="inUse" column="C_IN_USE" javaType="byte" jdbcType="TINYINT" />
		<result property="instId" column="C_INST_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="isMain" column="C_IS_MAIN" javaType="byte" jdbcType="TINYINT" />
		<result property="policyId" column="C_POLICY_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="subInstId" column="C_SUB_INST_ID" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- Insert POJO object -->
	<insert id="insert" parameterType="com.riil.base.resmodel.pojo.policy.PolicyPojo">
		INSERT INTO t_moni_policy_info
		( C_CREATE_TIME, C_CREATE_USER, C_DESC,
		C_FILE_NAME, C_ARGS, C_FREQUENCY, C_ID,
		C_IN_USE, C_IS_DEFAULT, C_IS_FACTORY,
		C_IS_MAIN,
		C_MAIN_POLICY_ID,
		C_MODEL_ID,C_MODEL_NAME,C_TREE_NODE_ID, C_NAME,
		C_POLICY_TYPE, C_PUBLISH_TIME, C_PUBLISH_USER,
		C_RES_TYPE_ID,C_RES_TYPE_NAME,
		C_SEPARATOR_COL, C_SEPARATOR_ROW, C_TAG1,
		C_TAG2,
		C_TAG3, C_TAG4, C_UPDATE_TIME, C_UPDATE_USER,
		C_USER_DOMAIN_ID,
		C_ORIGINAL_POLICY_ID,  C_BANDWIDTH_TYPE
		)
		VALUES( #{createTime ,jdbcType=TIMESTAMP},
		#{createUser ,jdbcType=VARCHAR}, #{desc ,jdbcType=VARCHAR}, #{fileName ,jdbcType=VARCHAR},#{args ,jdbcType=VARCHAR},
		#{frequency ,jdbcType=VARCHAR}, #{id ,jdbcType=VARCHAR},
		#{inUse ,jdbcType=TINYINT},
		#{isDefault ,jdbcType=TINYINT}, #{isFactory ,jdbcType=TINYINT}, #{isMain ,jdbcType=TINYINT},
		#{mainPolicyId ,jdbcType=VARCHAR},
		#{modelId ,jdbcType=VARCHAR},#{modelName ,jdbcType=VARCHAR},
		#{treeNodeId ,jdbcType=VARCHAR}, #{name ,jdbcType=VARCHAR}, #{policyType ,jdbcType=VARCHAR},
		#{publishTime ,jdbcType=TIMESTAMP}, #{publishUser ,jdbcType=VARCHAR}, #{resTypeId ,jdbcType=VARCHAR},#{resTypeName ,jdbcType=VARCHAR},
		#{separatorCol ,jdbcType=VARCHAR},
		#{separatorRow ,jdbcType=VARCHAR}, #{tag1 ,jdbcType=VARCHAR}, #{tag2 ,jdbcType=VARCHAR},
		#{tag3 ,jdbcType=VARCHAR}, #{tag4 ,jdbcType=VARCHAR},
		#{updateTime ,jdbcType=TIMESTAMP}, #{updateUser ,jdbcType=VARCHAR}, #{userDomainId ,jdbcType=VARCHAR},
		#{originalPolicyId ,jdbcType=VARCHAR},
		 #{bandwidthType, jdbcType=VARCHAR} )
    </insert>


	<!-- Update POJO object by ID -->
	<update id="update_by_id" parameterType="com.riil.base.resmodel.pojo.policy.PolicyPojo">
		UPDATE t_moni_policy_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="createTime != null">
				C_CREATE_TIME = #{createTime ,jdbcType=TIMESTAMP},
		    </if>
			<if test="createUser != null and createUser != ''">
				C_CREATE_USER = #{createUser ,jdbcType=VARCHAR},
		    </if>
			<if test="desc != null and desc != ''">
				C_DESC = #{desc ,jdbcType=VARCHAR},
		    </if>
			<if test="fileName != null and fileName != ''">
				C_FILE_NAME = #{fileName ,jdbcType=VARCHAR},
		    </if>
		    <if test="args != null and args != ''">
				C_ARGS = #{args ,jdbcType=VARCHAR},
		    </if>
			<if test="frequency != null and frequency != ''">
				C_FREQUENCY = #{frequency ,jdbcType=VARCHAR},
		    </if>
			<if test="inUse != 0">
				C_IN_USE = #{inUse ,jdbcType=TINYINT},
		    </if>
			<if test="isDefault != 0">
				C_IS_DEFAULT = #{isDefault ,jdbcType=TINYINT},
		    </if>
			<if test="isFactory != 0">
				C_IS_FACTORY = #{isFactory ,jdbcType=TINYINT},
		    </if>
			<if test="isMain != 0">
				C_IS_MAIN = #{isMain ,jdbcType=TINYINT},
		    </if>
			<if test="mainPolicyId != null and mainPolicyId != ''">
				C_MAIN_POLICY_ID = #{mainPolicyId ,jdbcType=VARCHAR},
		    </if>
			<if test="modelId != null and modelId != ''">
				C_MODEL_ID = #{modelId ,jdbcType=VARCHAR},
		    </if>
		    <if test="modelName != null and modelName != ''">
				C_MODEL_NAME = #{modelName ,jdbcType=VARCHAR},
		    </if>
			<if test="treeNodeId != null and treeNodeId != ''">
				C_TREE_NODE_ID = #{treeNodeId ,jdbcType=VARCHAR},
		    </if>
			<if test="name != null and name != ''">
				C_NAME = #{name ,jdbcType=VARCHAR},
		    </if>
			<if test="policyType != null and policyType != ''">
				C_POLICY_TYPE = #{policyType ,jdbcType=VARCHAR},
		    </if>
			<if test="publishTime != null">
				C_PUBLISH_TIME = #{publishTime ,jdbcType=TIMESTAMP},
		    </if>
			<if test="publishUser != null and publishUser != ''">
				C_PUBLISH_USER = #{publishUser ,jdbcType=VARCHAR},
		    </if>
			<!-- <if test="resTypeId != null and resTypeId != ''"> C_RES_TYPE_ID = #{resTypeId}, </if> -->
			<if test="separatorCol != null and separatorCol != ''">
				C_SEPARATOR_COL = #{separatorCol ,jdbcType=VARCHAR},
		    </if>
			<if test="separatorRow != null and separatorRow != ''">
				C_SEPARATOR_ROW = #{separatorRow ,jdbcType=VARCHAR},
		    </if>
			<if test="updateTime != null">
				C_UPDATE_TIME = #{updateTime ,jdbcType=TIMESTAMP},
		    </if>
			<if test="updateUser != null and updateUser != ''">
				C_UPDATE_USER = #{updateUser ,jdbcType=VARCHAR},
		    </if>
			<if test="userDomainId != null and userDomainId != ''">
				C_USER_DOMAIN_ID = #{userDomainId ,jdbcType=VARCHAR},
		    </if>
			<if test="originalPolicyId != null and originalPolicyId != ''">
				C_ORIGINAL_POLICY_ID = #{originalPolicyId ,jdbcType=VARCHAR},
		    </if>
		    <if test="bandwidthType != null and bandwidthType != ''">
				C_BANDWIDTH_TYPE = #{bandwidthType, javaType=string},
		    </if>
			<if test="tag1 != null and tag1 != ''">
				C_TAG1 = #{tag1 ,jdbcType=VARCHAR},
		    </if>
			<if test="tag2 != null and tag2 != ''">
				C_TAG2 = #{tag2 ,jdbcType=VARCHAR},
		    </if>
			<if test="tag3 != null and tag3 != ''">
				C_TAG3 = #{tag3 ,jdbcType=VARCHAR},
		    </if>
			<if test="tag4 != null and tag4 != ''">
				C_TAG4 = #{tag4 ,jdbcType=VARCHAR},
		    </if>
		</trim>
		WHERE C_ID = #{id ,jdbcType=VARCHAR}
	</update>

	<!-- Update POJO object by ID -->
	<update id="policyPublish" parameterType="java.util.Map">
		UPDATE
		t_moni_policy_info
		SET C_PUBLISH_TIME=#{publishTime ,jdbcType=TIMESTAMP},
		C_PUBLISH_USER = #{publishUser ,jdbcType=VARCHAR},
		C_IN_USE = #{inUse ,jdbcType=TINYINT},
		C_ORIGINAL_POLICY_ID = #{originalPolicyId ,jdbcType=VARCHAR}
		WHERE
		C_ID = #{policyId}
	</update>

	<!-- Update POJO object by ID -->
	<update id="policyStop" parameterType="java.util.Map">
		UPDATE t_moni_policy_info
		SET C_IN_USE =
		#{inUse ,jdbcType=TINYINT},
		C_ORIGINAL_POLICY_ID = #{originalPolicyId ,jdbcType=VARCHAR}
		WHERE C_ID = #{policyId}
	</update>

	<!-- Update POJO object by ID -->
	<update id="update_newPolicyId_by_oriPolicyId" parameterType="java.util.Map">
		UPDATE t_moni_policy_info
		SET C_ID = #{oriPolicyId}
		WHERE C_ID =
		#{newPolicyId}
    </update>

	<!-- Delete POJO object by ID -->
	<delete id="delete_by_id" parameterType="string">
		DELETE FROM
		t_moni_policy_info WHERE C_ID = #{ID}
    </delete>

	<!-- Delete POJO object by ID -->
	<delete id="batchDeleteByIds" parameterType="java.util.List">
		DELETE FROM t_moni_policy_info WHERE C_ID IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
        </foreach>
	</delete>
	
	<select id="select_all" 
		resultMap="PolicyBaseInfoResultMap">
		SELECT C_CREATE_TIME, C_CREATE_USER, C_DESC,
		C_FILE_NAME, C_ARGS,
		C_FREQUENCY, C_ID,
		C_IN_USE, C_IS_DEFAULT, C_IS_FACTORY, C_IS_MAIN,
		C_MAIN_POLICY_ID,
		C_MODEL_ID,C_MODEL_NAME, C_TREE_NODE_ID, C_NAME,
		 C_POLICY_TYPE,
		C_PUBLISH_TIME, C_PUBLISH_USER, C_RES_TYPE_ID,C_RES_TYPE_NAME,
		C_SEPARATOR_COL, C_SEPARATOR_ROW,
		C_TAG1, C_TAG2,
		C_TAG3, C_TAG4, C_UPDATE_TIME,
		C_UPDATE_USER,
		C_USER_DOMAIN_ID,
		C_ORIGINAL_POLICY_ID,  C_BANDWIDTH_TYPE
		FROM t_moni_policy_info
	</select>

	<!-- Select POJO object by ID -->
	<select id="select_by_id" parameterType="string" resultMap="PolicyBaseInfoResultMap">
		SELECT C_CREATE_TIME, C_CREATE_USER, C_DESC,
		C_FILE_NAME, C_ARGS,
		C_FREQUENCY, C_ID,
		C_IN_USE, C_IS_DEFAULT, C_IS_FACTORY, C_IS_MAIN,
		C_MAIN_POLICY_ID,
		C_MODEL_ID,C_MODEL_NAME, C_TREE_NODE_ID, C_NAME,
		 C_POLICY_TYPE,
		C_PUBLISH_TIME, C_PUBLISH_USER, C_RES_TYPE_ID,C_RES_TYPE_NAME,
		C_SEPARATOR_COL, C_SEPARATOR_ROW,
		C_TAG1, C_TAG2,
		C_TAG3, C_TAG4, C_UPDATE_TIME,
		C_UPDATE_USER,
		C_USER_DOMAIN_ID,
		C_ORIGINAL_POLICY_ID,  C_BANDWIDTH_TYPE
		FROM t_moni_policy_info
		WHERE C_ID = #{policyId}
    </select>
	<select id="select_by_name" parameterType="map" resultType="int">
		select
		count(0)
		from t_moni_policy_info
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="domainId != null and domainId !=''">
				AND (C_USER_DOMAIN_ID = #{domainId} or C_USER_DOMAIN_ID IS NULL or C_USER_DOMAIN_ID = '')
	        </if>
			<if test="policyName != null and policyName !=''">
				AND C_NAME = #{policyName}
	        </if>
			<if test="policyId != null and policyId !=''">
				AND C_ID != #{policyId}
	        </if>
	        <if test="policyType != null and policyType !=''">
				AND C_POLICY_TYPE like CONCAT('${policyType}','%' )
	        </if>
	        <if test="mainPolicyId != null and mainPolicyId !=''">
				AND C_MAIN_POLICY_ID = #{mainPolicyId ,jdbcType=VARCHAR}
	        </if>
	        
		</trim>
	</select>
	<select id="select_by_model_policy_domain" parameterType="map" resultType="int">
		select
		count(0)
		from t_moni_policy_info
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="moniModelId != null and moniModelId !=''">
				AND C_MODEL_ID = #{moniModelId}
	        </if>
			<if test="policyId != null and policyId !=''">
				AND C_MAIN_POLICY_ID = #{policyId}
	        </if>
		</trim>
	</select>
	<!-- Select POJO object by ID -->
	<select id="select_default_policyId_by_modelId" parameterType="string" resultType="string">
		SELECT C_ID
		FROM
		t_moni_policy_info
		WHERE C_MODEL_ID =
		#{modelId ,jdbcType=VARCHAR} AND C_IS_DEFAULT = 1 
		<include refid="limit_one" />
    </select>

	<!-- Select POJO object by ID -->
	<select id="selectOriPolicyId_by_id" parameterType="string" resultType="string">
		SELECT C_ORIGINAL_POLICY_ID
		FROM
		t_moni_policy_info
		WHERE
		C_ID = #{policyId}
    </select>

	<!-- Select POJO object by ID -->
	<select id="selectOriPolicyId_by_id_batch" parameterType="java.util.List" resultType="string">
		SELECT C_ORIGINAL_POLICY_ID
		FROM t_moni_policy_info
		WHERE C_ID IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
        </foreach>
	</select>

	<!-- Select POJO object by ID -->
	<select id="selectSubPolicyIds_by_mainPolicyIds" parameterType="java.util.List" resultType="string">
		SELECT C_ID
		FROM t_moni_policy_info
		WHERE C_MAIN_POLICY_ID IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
        </foreach>
	</select>

	<!-- Select POJO object by ID -->
	<select id="selectPublishCount_by_id" parameterType="string" resultType="int">
		SELECT count(0)
		FROM t_moni_policy_info
		WHERE C_ID =
		#{policyId} AND C_IN_USE = 1
    </select>

	<!-- Select POJO object by ID -->
	<select id="selectPublishState_by_id" parameterType="string" resultType="byte">
		SELECT C_IN_USE
		FROM
		t_moni_policy_info
		WHERE C_ID =
		#{policyId}
    </select>

	<!-- Select POJO object by ID -->
	<select id="selectUseState_by_id" parameterType="string" resultType="byte">
		SELECT C_IN_USE
		FROM t_moni_policy_info
		WHERE
		C_ID =
		#{policyId}
    </select>

	<!-- Select POJO object by ID -->
	<select id="select_subPolicyBaseInfo_by_mainPolicyId" parameterType="string" resultMap="PolicyBaseInfoResultMap">
		SELECT C_CREATE_TIME,
		C_CREATE_USER,
		C_DESC, C_FILE_NAME, C_ARGS, C_FREQUENCY, C_ID,
		C_IN_USE, C_IS_DEFAULT, C_IS_FACTORY, C_IS_MAIN,
		C_MAIN_POLICY_ID, C_MODEL_ID,C_MODEL_NAME, C_TREE_NODE_ID, C_NAME, 
		C_POLICY_TYPE,
		C_PUBLISH_TIME, C_PUBLISH_USER,
		C_RES_TYPE_ID,C_RES_TYPE_NAME,
		C_SEPARATOR_COL, C_SEPARATOR_ROW, C_TAG1, C_TAG2,
		C_TAG3, C_TAG4, C_UPDATE_TIME,
		C_UPDATE_USER, C_USER_DOMAIN_ID,
		C_ORIGINAL_POLICY_ID,  C_BANDWIDTH_TYPE
		FROM t_moni_policy_info
		WHERE
		C_MAIN_POLICY_ID =
		#{mainPolicyId ,jdbcType=VARCHAR}
		ORDER BY C_MODEL_NAME,C_NAME
    </select>

	<!-- Select POJO object by ID -->
	<select id="select_newVersion_subPolicyBaseInfo_by_mainPolicyId" parameterType="string" resultMap="PolicyBaseInfoResultMap">
		SELECT
		C_CREATE_TIME, C_CREATE_USER,
		C_DESC, C_FILE_NAME, C_ARGS, C_FREQUENCY, C_ID,
		C_IN_USE, C_IS_DEFAULT, C_IS_FACTORY, C_IS_MAIN,
		C_MAIN_POLICY_ID, C_MODEL_ID,C_MODEL_NAME, C_TREE_NODE_ID, C_NAME, 
		C_POLICY_TYPE,
		C_PUBLISH_TIME,
		C_PUBLISH_USER, C_RES_TYPE_ID,C_RES_TYPE_NAME,
		C_SEPARATOR_COL, C_SEPARATOR_ROW, C_TAG1, C_TAG2,
		C_TAG3, C_TAG4,
		C_UPDATE_TIME, C_UPDATE_USER, C_USER_DOMAIN_ID,
		C_ORIGINAL_POLICY_ID,  C_BANDWIDTH_TYPE
		FROM t_moni_policy_info
		WHERE
		C_MAIN_POLICY_ID = #{mainPolicyId ,jdbcType=VARCHAR} 
		ORDER BY C_MODEL_NAME,C_NAME
    </select>

	<!-- Select POJO object by ID -->
	<select id="select_subOriPolicyId_by_mainPolicyId" parameterType="string" resultType="string">
		SELECT C_ORIGINAL_POLICY_ID
		FROM t_moni_policy_info
		WHERE C_MAIN_POLICY_ID = #{mainPolicyId ,jdbcType=VARCHAR}
		AND (C_ORIGINAL_POLICY_ID IS NOT NULL OR
		C_ORIGINAL_POLICY_ID = '')
	</select>

	<!-- Select POJO object by ID -->
	
	<sql id="select_PolicyColumn">
	SELECT C_CREATE_TIME, C_CREATE_USER, C_DESC, C_FILE_NAME, C_ARGS, C_FREQUENCY,
		C_ID,
		C_IN_USE, C_IS_DEFAULT, C_IS_FACTORY,
		C_IS_MAIN,
		C_MAIN_POLICY_ID, C_MODEL_ID,C_MODEL_NAME, C_TREE_NODE_ID, C_NAME, 
		C_POLICY_TYPE,
		C_PUBLISH_TIME,
		C_PUBLISH_USER, C_RES_TYPE_ID,C_RES_TYPE_NAME,
		C_SEPARATOR_COL, C_SEPARATOR_ROW, C_TAG1, C_TAG2,
		C_TAG3, C_TAG4,
		C_UPDATE_TIME, C_UPDATE_USER, C_USER_DOMAIN_ID,
		C_ORIGINAL_POLICY_ID,  C_BANDWIDTH_TYPE
	FROM t_moni_policy_info
	WHERE
	</sql>
	
	<select id="select_newVersion_mainPolicyBaseInfo_by_policyTypeAndDomain_All" parameterType="java.util.Map"
		resultMap="PolicyBaseInfoResultMap">
		<include refid="select_PolicyColumn"/>
		<include refid="policyType_condition"/>
		and ( ( C_IS_MAIN = 1
		<if test="domainIds != null and !domainIds.isEmpty()">
			AND C_USER_DOMAIN_ID IN
			<foreach item="item" index="index" collection="domainIds" open="(" separator="," close=")">
				#{item}
		    </foreach>
		</if>
		) OR (C_IS_DEFAULT=1 AND C_IS_MAIN = 1) )
		ORDER BY C_MODEL_NAME,C_NAME
	</select>
	
	<select id="select_newVersion_subPolicyBaseInfo_by_policyTypeAndDomain_All" parameterType="java.util.Map"
		resultMap="PolicyBaseInfoResultMap">
		<include refid="select_PolicyColumn"/>
		<include refid="policyType_condition"/>
		and ( ( C_IS_MAIN = -1
		<if test="domainIds != null and !domainIds.isEmpty()">
			AND C_USER_DOMAIN_ID IN
			<foreach item="item" index="index" collection="domainIds" open="(" separator="," close=")">
				#{item}
		    </foreach>
		</if>
		) OR (C_IS_DEFAULT=1 AND C_IS_MAIN = -1) )
		ORDER BY C_MODEL_NAME,C_NAME
	</select>
	
	<sql id="policyType_condition">
		<if test="policyType != null and policyType == 'RES'">
		C_POLICY_TYPE = #{policyType ,jdbcType=VARCHAR} 
		</if>
		<if test="policyType != null and policyType != 'RES'">
		INSTR(C_POLICY_TYPE,#{policyType ,jdbcType=VARCHAR})>0 
		</if>  
	</sql>
	
	<select id="select_newVersion_mainPolicyBaseInfo_by_policyTypeAndDomain" parameterType="java.util.Map"
		resultMap="PolicyBaseInfoResultMap">
		<include refid="select_PolicyColumn"/>
		INSTR(C_POLICY_TYPE,#{policyType ,jdbcType=VARCHAR})>0  
		<if test="policyType != null and policyType == 'RES'">
			AND c_model_id IN (SELECT DISTINCT c_model_id from t_res_instance_info ) 
		</if>
		and ( ( C_IS_MAIN = 1
		<if test="domainIds != null and !domainIds.isEmpty()">
			AND C_USER_DOMAIN_ID IN
			<foreach item="item" index="index" collection="domainIds" open="(" separator="," close=")">
				#{item}
		    </foreach>
		</if>
		) OR (C_IS_DEFAULT=1 ) )
		<if test="inUse != null  and inUse != ''">
			and	C_IN_USE = #{inUse ,jdbcType=TINYINT}
		</if>
		ORDER BY C_MODEL_NAME,C_NAME
	</select>
	<select id="select_by_policy_type_4publish" parameterType="java.util.Map"
		resultMap="PolicyBaseInfoResultMap">
		SELECT p.c_id, p.c_original_policy_id, p.c_in_use, p.c_is_default, p.c_is_factory, p.c_is_main,
			 p.c_main_policy_id, p.c_model_id, p.c_model_name, p.c_tree_node_id, p.c_name,
			p.c_policy_type, p.c_publish_time, p.c_publish_user, p.C_RES_TYPE_ID, p.C_RES_TYPE_NAME, p.c_separator_col,
			p.c_separator_row,p.c_tag1, p.c_tag2, p.c_tag3, p.c_tag4, p.c_update_time, p.c_update_user, 
			p.c_user_domain_id, p.c_create_time, p.c_create_user, p.c_desc, p.c_file_name, p.c_args, p.c_frequency
		FROM
			t_moni_policy_info p
		INNER JOIN ( SELECT DISTINCT c_policy_id FROM t_moni_policy_res_rel ) r ON r.c_policy_id = p.c_id
		WHERE
			INSTR(C_POLICY_TYPE, #{policyType ,jdbcType=VARCHAR}) > 0
		AND p.c_in_use = 1
	</select>
	
	<select id="select_policyBaseInfo_by_policyType_Domain_isPublish" parameterType="java.util.Map"
		resultMap="PolicyBaseInfoResultMap">
		SELECT p.c_id, p.c_original_policy_id, p.c_in_use, p.c_is_default, p.c_is_factory, p.c_is_main,
			p.c_main_policy_id, p.c_model_id, p.c_model_name, p.c_tree_node_id, p.c_name,
			p.c_policy_type, p.c_publish_time, p.c_publish_user, p.C_RES_TYPE_ID, p.C_RES_TYPE_NAME, p.c_separator_col,
			p.c_separator_row,p.c_tag1, p.c_tag2, p.c_tag3, p.c_tag4, p.c_update_time, p.c_update_user, 
			p.c_user_domain_id, p.c_create_time, p.c_create_user, p.c_desc, p.c_file_name, p.c_args, p.c_frequency
		FROM
			t_moni_policy_info p
		WHERE
			INSTR(C_POLICY_TYPE, #{policyType ,jdbcType=VARCHAR}) > 0
		AND p.c_in_use = #{inUse ,jdbcType=TINYINT}
		<if test="domainIds != null and !domainIds.isEmpty()">
			AND p.C_USER_DOMAIN_ID IN
			<foreach item="item" index="index" collection="domainIds" open="(" separator="," close=")">
				#{item}
		    </foreach>
		</if>
	</select>
	
	<select id="select_4publish" 
		resultMap="PolicyBaseInfoResultMap">
		SELECT p.c_id, p.c_original_policy_id, p.c_in_use, p.c_is_default, p.c_is_factory, p.c_is_main,
			 p.c_main_policy_id, p.c_model_id, p.c_model_name, p.c_tree_node_id, p.c_name,
			p.c_policy_type, p.c_publish_time, p.c_publish_user, p.C_RES_TYPE_ID, p.C_RES_TYPE_NAME, p.c_separator_col,
			p.c_separator_row,p.c_tag1, p.c_tag2, p.c_tag3, p.c_tag4, p.c_update_time, p.c_update_user, 
			p.c_user_domain_id, p.c_create_time, p.c_create_user, p.c_desc, p.c_file_name, p.c_args, p.c_frequency
		FROM
			t_moni_policy_info p
		INNER JOIN ( SELECT DISTINCT c_policy_id FROM t_moni_policy_res_rel ) r ON r.c_policy_id = p.c_id
		WHERE p.c_in_use = 1
	</select>
	
	<!-- Select POJO object by ID -->
	<select id="select_newVersion_PolicyIds_by_instanceIds" parameterType="java.util.List" resultType="string">
		SELECT DISTINCT(info.C_ID)
		FROM t_moni_policy_info info, t_moni_policy_res_rel res
		WHERE
		(res.C_INST_ID IN
		<foreach item="item" index="index" collection="reslist" open="(" separator="," close=")">
			#{item}
        </foreach>
		OR res.C_SUB_INST_ID IN
		<foreach item="item" index="index" collection="reslist" open="(" separator="," close=")">
			#{item}
        </foreach>
		)
		AND res.C_POLICY_ID = info.C_ID AND
		info.C_POLICY_TYPE = #{policyType ,jdbcType=VARCHAR}
		
	</select>

	<!-- Select POJO object by ID -->
	<select id="select_newVersion_Policys_by_instanceIds" parameterType="java.util.Map" resultMap="PolicyBaseInfoResultMap">
		SELECT DISTINCT i.C_CREATE_TIME, i.C_CREATE_USER, i.C_DESC, i.C_FILE_NAME, i.C_ARGS,
		i.C_FREQUENCY, i.C_ID,
		i.C_IN_USE, i.C_IS_DEFAULT,
		i.C_IS_FACTORY, i.C_IS_MAIN,
		i.C_MAIN_POLICY_ID, i.C_MODEL_ID,i.C_MODEL_NAME, i.C_TREE_NODE_ID, i.C_NAME,
		i.C_POLICY_TYPE,
		i.C_PUBLISH_TIME, i.C_PUBLISH_USER,i.C_RES_TYPE_ID,i.C_RES_TYPE_NAME,
		i.C_SEPARATOR_COL, i.C_SEPARATOR_ROW,
		i.C_TAG1, i.C_TAG2,
		i.C_TAG3, i.C_TAG4, i.C_UPDATE_TIME, i.C_UPDATE_USER, i.C_USER_DOMAIN_ID,
		i.C_ORIGINAL_POLICY_ID,  i.C_BANDWIDTH_TYPE
		FROM t_moni_policy_res_rel r,t_moni_policy_info i
		WHERE i.C_POLICY_TYPE =
		#{policyType ,jdbcType=VARCHAR} AND i.C_ID = r.C_POLICY_ID AND
		 (r.C_INST_ID IN
		<foreach item="item" index="index" collection="reslist" open="(" separator="," close=")">
			#{item}
        </foreach>
		OR r.C_SUB_INST_ID IN
		<foreach item="item" index="index" collection="reslist" open="(" separator="," close=")">
			#{item}
        </foreach>
		)
		ORDER BY C_MODEL_NAME,C_NAME
	</select>
	<!-- Select newVersion_Policys_by_types_and_resid -->
	<select id="select_newVersion_Policys_by_types_and_resid" parameterType="java.util.Map" resultMap="PolicyBaseInfoResultMap">
		SELECT i.C_CREATE_TIME, i.C_CREATE_USER, i.C_DESC, i.C_FILE_NAME, i.C_ARGS,
		i.C_FREQUENCY, i.C_ID,
		i.C_IN_USE, i.C_IS_DEFAULT,
		i.C_IS_FACTORY, i.C_IS_MAIN,
		i.C_MAIN_POLICY_ID, i.C_MODEL_ID,i.C_MODEL_NAME, i.C_TREE_NODE_ID, i.C_NAME,
		i.C_POLICY_TYPE,
		i.C_PUBLISH_TIME, i.C_PUBLISH_USER,i.C_RES_TYPE_ID,i.C_RES_TYPE_NAME,
		i.C_SEPARATOR_COL, i.C_SEPARATOR_ROW,
		i.C_TAG1, i.C_TAG2,
		i.C_TAG3, i.C_TAG4, i.C_UPDATE_TIME, i.C_UPDATE_USER, i.C_USER_DOMAIN_ID,
		i.C_ORIGINAL_POLICY_ID,  i.C_BANDWIDTH_TYPE
		FROM t_moni_policy_res_rel r,t_moni_policy_info i
		WHERE r.C_INST_ID =
		#{resId} AND i.C_ID = r.C_POLICY_ID AND
		 i.C_POLICY_TYPE IN
		<foreach item="item" index="index" collection="policyTypes" open="(" separator="," close=")">
			#{item}
        </foreach>
		ORDER BY C_MODEL_NAME,C_NAME
	</select>
    
    <select id="select_resRelIds_by_serverId" parameterType="java.util.Map" resultType="String">
		SELECT REL.C_ID
		FROM t_res_instance_info RES, t_moni_policy_res_rel REL
		WHERE REL.C_INST_ID = RES.C_ID
			<if test="serverId != null and serverId !=''">
				AND RES.C_SERVER_ID = #{serverId} 
	        </if> 
	        <if test="policyId != null and policyId !=''">
				AND REL.C_POLICY_ID = #{policyId} 
	        </if>  
    </select>
    
    <select id="select_scriptResIds_by_serverId" parameterType="java.util.Map" resultType="String">
		SELECT REL.C_ID
		FROM t_moni_policy_script_res REL
		WHERE 1=1
			<if test="serverId != null and serverId !=''">
				AND REL.C_SERVER_ID = #{serverId} 
	        </if> 
	        <if test="policyId != null and policyId !=''">
				AND REL.C_POLICY_ID = #{policyId} 
	        </if>  
    </select>
    
    <select id="select_policyResRelExt_by_instId" parameterType="java.util.Map" resultMap="PolicyResRelExtResultMap">
		SELECT prr.C_ID as C_ID,
		pi.C_IN_USE,
		prr.C_POLICY_ID, prr.C_INST_ID, prr.C_SUB_INST_ID, prr.C_IS_MAIN
		FROM t_moni_policy_info pi
		INNER JOIN t_moni_policy_res_rel prr ON pi.c_id = prr.c_policy_id
		<where>
			<if test="policyType !=null and policyType !=''">AND pi.c_policy_type = #{policyType}</if>
			<if test="instIds !=null and instIds.size() > 0 ">AND prr.C_INST_ID IN <include refid="foreachInstIds"/></if>
			<if test="subInstIds !=null and subInstIds.size() > 0 ">AND prr.C_SUB_INST_ID IN <include refid="foreachSubInstIds"/></if>
			<if test="isMain !=null and isMain !=0 ">AND prr.C_IS_MAIN = #{isMain}</if>
		</where>
	</select>
	
	<select id="select_policybase_by_inst_id"  parameterType="java.util.Map"  resultMap="PolicyBaseInfoResultMap">
	 SELECT p.C_CREATE_TIME, p.C_CREATE_USER, p.C_DESC, p.C_FILE_NAME, p.C_ARGS,
		p.C_FREQUENCY, p.C_ID,
		p.C_IN_USE, p.C_IS_DEFAULT,
		p.C_IS_FACTORY, p.C_IS_MAIN,
		p.C_MAIN_POLICY_ID, p.C_MODEL_ID,p.C_MODEL_NAME, p.C_TREE_NODE_ID, p.C_NAME,
		p.C_POLICY_TYPE,
		p.C_PUBLISH_TIME, p.C_PUBLISH_USER,p.C_RES_TYPE_ID,p.C_RES_TYPE_NAME,
		p.C_SEPARATOR_COL, p.C_SEPARATOR_ROW,
		p.C_TAG1, p.C_TAG2,
		p.C_TAG3, p.C_TAG4, p.C_UPDATE_TIME, p.C_UPDATE_USER, p.C_USER_DOMAIN_ID,
		p.C_ORIGINAL_POLICY_ID,  p.C_BANDWIDTH_TYPE
		FROM
		  t_moni_policy_info p 
		  LEFT JOIN t_moni_policy_res_rel prr 
		    ON p.C_ID = prr.C_POLICY_ID
		<where>
			<if test="instId !=null and instId != '' ">
				AND prr.C_INST_ID = #{instId ,jdbcType=VARCHAR} 
			</if>
			<if test="subInstId !=null and subInstId != '' ">
				AND prr.C_SUB_INST_ID = #{subInstId ,jdbcType=VARCHAR} 
			</if>
			<if test="subInstId ==null and subInstId =='' ">
				AND (
				    prr.C_SUB_INST_ID IS NULL 
				    OR prr.C_SUB_INST_ID = ''
				  )
			</if>
			<if test="policyType !=null and policyType != '' ">
				AND p.C_POLICY_TYPE = #{policyType ,jdbcType=VARCHAR} 
			</if>
		</where>
	</select>
	
	
	<sql id="foreachInstIds">
		<foreach collection="instIds" item="item" open="(" separator="," close=")">
			#{item}
        </foreach>
	</sql>
	
	<sql id="foreachSubInstIds">
		<foreach collection="subInstIds" item="item" open="(" separator="," close=")">
			#{item}
        </foreach>
	</sql>
</mapper>
