<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.riil.base.resmodel.impl.db.dao.ResTypeDao">

	<resultMap id="resTypeResultMap" type="com.riil.base.binding.pojo.ResTypeExtendPojo">
		<result property="icon" column="C_ICON" javaType="string" jdbcType="VARCHAR" />
		<result property="id" column="C_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="isMain" column="C_IS_MAIN" javaType="_byte" jdbcType="TINYINT" />
		<result property="isCustom" column="C_IS_CUSTOM" javaType="_int" jdbcType="TINYINT" />
		<result property="name" column="C_NAME" javaType="string" jdbcType="VARCHAR" />
		<result property="parentId" column="C_PARENT_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="resCatalog" column="C_RES_CATALOG" javaType="string" jdbcType="VARCHAR" />
		<result property="sortId" column="C_SORT_ID" javaType="_int" jdbcType="INTEGER" />
		<result property="tag1" column="C_TAG1" javaType="string" jdbcType="VARCHAR" />
		<result property="tag2" column="C_TAG2" javaType="string" jdbcType="VARCHAR" />
		<result property="tag3" column="C_TAG3" javaType="string" jdbcType="VARCHAR" />
		<result property="tag4" column="C_TAG4" javaType="string" jdbcType="VARCHAR" />
		<result property="treeLevel" column="C_TREE_LEVEL" javaType="_int" jdbcType="SMALLINT" />
		<result property="treeNodeId" column="C_TREE_NODE_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="vendorId" column="C_VENDOR_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="resNumMonitor" column="C_RES_NUM_MONITOR" javaType="_int" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Query_Where_Clause">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="icon != null and icon != ''">
				AND C_ICON = #{icon}
			</if>

			<if test="id != null and id != ''">
				AND C_ID = #{id}
			</if>

			<if test="isMain != null and isMain != 0 ">
				AND C_IS_MAIN = #{isMain ,jdbcType=TINYINT}
            </if>

			<if test="name != null and name != ''">
				AND C_NAME = #{name}
			</if>

			<if test="parentId != null and parentId != ''">
				AND C_PARENT_ID = #{parentId}
			</if>
			
			<if test="resCatalog != null and resCatalog != ''">
				AND C_RES_CATALOG = #{resCatalog}
			</if>

			<if test="sortId != 0 ">
				AND C_SORT_ID = #{sortId}
			</if>

			<if test="tag1 != null and tag1 != ''">
				AND C_TAG1 = #{tag1}
			</if>

			<if test="tag2 != null and tag2 != ''">
				AND C_TAG2 = #{tag2}
			</if>

			<if test="tag3 != null and tag3 != ''">
				AND C_TAG3 = #{tag3}
			</if>

			<if test="tag4 != null and tag4 != ''">
				AND C_TAG4 = #{tag4}
			</if>

			<if test="treeLevel != 0 ">
				AND C_TREE_LEVEL = #{treeLevel}
			</if>

			<if test="treeNodeId != null and treeNodeId != ''">
				AND C_TREE_NODE_ID like <include refid="func_concat_1" /> #{treeNodeId ,jdbcType=VARCHAR} <include refid="func_concat_2" /> 
            </if>

			<if test="vendorId != null and vendorId != ''">
				AND C_VENDOR_ID = #{vendorId}
			</if>

		</trim>
	</sql>
	
	<sql id="v_biz_res_weight">
		(
		SELECT
		br.c_biz_id,
		br.c_res_instance_id,
		br.c_sub_inst_id,
		br.c_weight,
		br.c_company_id,
		br.c_tag1,
		br.c_tag2,
		r.C_RES_TYPE_ID,
		r.C_RES_TYPE_NAME,
		r.c_tree_node_id,
		r.c_name_display c_res_name
		from t_biz_res_weight br LEFT JOIN t_res_instance_info r on  br.c_res_instance_id=r.c_id
		)
	</sql>
	
	<sql id="v_sel_distict_res_type">
		SELECT DISTINCT
		  t.C_ICON,
		  t.C_ID,
		  t.C_IS_MAIN,
		  t.C_NAME,
		  t.C_PARENT_ID,
		  t.C_RES_CATALOG,
		  t.C_SORT_ID,
		  t.C_TAG1,
		  t.C_TAG2,
		  t.C_TAG3,
		  t.C_TAG4,
		  t.C_TREE_LEVEL,
		  t.C_TREE_NODE_ID,
		  t.C_VENDOR_ID 
		FROM t_moni_res_type t
	</sql>
	
	<sql id="column_Temp">
		 ,t.C_ICON,
		  t.C_ID,
		  t.C_IS_MAIN,
		  t.C_NAME,
		  t.C_PARENT_ID,
		  t.C_RES_CATALOG,
		  t.C_SORT_ID,
		  t.C_TAG1,
		  t.C_TAG2,
		  t.C_TAG3,
		  t.C_TAG4,
		  t.C_TREE_LEVEL,
		  t.C_TREE_NODE_ID,
		  t.C_VENDOR_ID 
	</sql>
	
	<sql id="select_Temp">
	<trim prefix="SELECT DISTINCT " prefixOverrides=",">
		<include refid="column_Temp"/>
	</trim>
	</sql>
	
	<sql id="select_ResTree-ResNum">
	<trim prefix="SELECT " prefixOverrides=",">
	,SUM(c.c_res_num) AS c_res_num_monitor
	<include refid="column_Temp"/>
	</trim>
	FROM 
		(select t1.* from t_moni_res_type t1 
		 	where (  
		 			<!-- 全部父节点 -->
					EXISTS (select 1 from t_moni_res_type t2 where t2.c_parent_id = t1.c_id) 
					OR 
					<!-- 存在资源的叶子节点 -->
					EXISTS (select 1 from t_res_instance_info res1 WHERE res1.c_tree_node_id = t1.c_tree_node_id)
			       ) 
			   and t1.c_is_main = 1  AND t1.c_tree_level > 0 
		) t <!-- 查询有资源的模板（叶子）和全部父模板  -->
	</sql>
	
	<sql id="resBaseParam_condition">
		<include refid="isManaged_condition"/>
		<include refid="availStatus_condition"/>
		<if test="ip != null and ip !='' ">AND res.C_PRIMARY_IP = #{ip ,jdbcType=VARCHAR}</if>
		<if test="treeNodeId != null and treeNodeId !='' ">AND res.C_TREE_NODE_ID LIKE '${treeNodeId}%'</if>
	</sql>
	<sql id="isManaged_condition"><if test="isManaged == -1">AND pi.c_in_use = -1 OR pi.c_in_use IS NULL</if></sql>
	<sql id="availStatus_condition">
		<if test="availStatus != null and availStatus == '-2'">AND (l.c_data_value = #{availStatus ,jdbcType=VARCHAR} OR l.c_data_value IS NULL)</if>
		<if test="availStatus != null and availStatus != '-2'">AND l.c_data_value = #{availStatus ,jdbcType=VARCHAR} </if>
	</sql>
	
	<sql id="resTreeParam_condition">
		<if test="policyTypes !=null and policyTypes.size() >0 ">AND res.C_POLICY_TYPE IN <include refid="foreachPolicyTypes"/></if>
		<if test="resCatalogs !=null and resCatalogs.size() >0 ">AND res.C_RES_CATALOG IN <include refid="foreachResCatalogs"/></if>
	</sql>
	
	<sql id="groupByID">
		<trim prefix="GROUP BY" prefixOverrides=","><include refid="column_Temp"/></trim>
	</sql>
	
	<sql id="foreachDomainIds">
		<foreach collection="domainIds" item="item" open="(" separator="," close=")">
			#{item}
        </foreach>
	</sql>
	<sql id="foreachGroupIds">
		<foreach collection="groupIds" item="item" open="(" separator="," close=")">
			#{item}
        </foreach>
	</sql>
	<sql id="foreachResCatalogs">
		<foreach collection="resCatalogs" item="item" open="(" separator="," close=")">
			#{item}
        </foreach>
	</sql>
	<sql id="foreachPolicyTypes">
		<foreach collection="policyTypes" item="item" open="(" separator="," close=")">
			#{item}
        </foreach>
	</sql>
	
	
	<sql id="select_Temp-ResNum">
		<trim prefix="SELECT " prefixOverrides=",">
		,count(DISTINCT res.c_id) AS c_res_num_monitor
		<include refid="column_Temp"/>
		FROM t_moni_res_type t
		</trim>
		INNER JOIN t_res_instance_info res ON res.c_tree_node_id LIKE CONCAT(t.c_tree_node_id, '%') AND t.c_tree_level > 0
		<if test="isManaged == 1">
		INNER JOIN t_moni_policy_res_rel prr ON res.c_id = prr.c_inst_id AND prr.c_is_main = 1
		INNER JOIN t_moni_policy_info pi ON pi.c_id = prr.c_policy_id AND pi.c_policy_type=res.c_policy_type AND pi.c_in_use = 1
		</if>
		<if test="isManaged == -1">
		LEFT JOIN t_moni_policy_res_rel prr ON res.c_id = prr.c_inst_id AND prr.c_is_main = 1
		LEFT JOIN t_moni_policy_info pi ON pi.c_id = prr.c_policy_id AND pi.c_policy_type=res.c_policy_type AND pi.c_in_use = 1
		</if>
		<if test="availStatus != null and availStatus != 0">
		LEFT JOIN t_data_latest l ON res.c_id = l.c_inst_id AND l.c_metric_id = 'AvailStatus' AND (l.c_sub_inst_id IS NULL OR l.c_sub_inst_id = '')
		</if>
	</sql>
	
	<!-- Insert POJO object -->
	<insert id="insert" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo">
		INSERT INTO t_moni_res_type ( C_ICON, C_ID, C_IS_MAIN,C_IS_CUSTOM, C_NAME, C_PARENT_ID,
		C_RES_CATALOG, C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4,
		C_TREE_LEVEL, C_TREE_NODE_ID, C_VENDOR_ID )
		VALUES( #{icon}, #{id}, #{isMain}, #{isCustom}, #{name}, #{parentId},#{resCatalog},
		#{sortId}, #{tag1}, #{tag2}, #{tag3}, #{tag4},
		#{treeLevel}, #{treeNodeId}, #{vendorId} )
    </insert>

	<insert id="batchInsert" parameterType="list">
		INSERT INTO t_moni_res_type ( C_ICON, C_ID, C_IS_MAIN, C_IS_CUSTOM,C_NAME, C_PARENT_ID,
		C_RES_CATALOG, C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4,
		C_TREE_LEVEL, C_TREE_NODE_ID, C_VENDOR_ID )
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.icon}, #{item.id}, #{item.isMain},  #{item.isCustom},#{item.name}, #{item.parentId},#{item.resCatalog},
		#{item.sortId}, #{item.tag1}, #{item.tag2}, #{item.tag3}, #{item.tag4},
		#{item.treeLevel}, #{item.treeNodeId}, #{item.vendorId} )		
		</foreach>
	</insert>

	<!-- Update POJO object by ID -->
	<update id="update_by_id" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo">
		UPDATE t_moni_res_type
		SET C_ICON = #{icon},
		C_ID = #{id},
		C_IS_MAIN = #{isMain},
		C_NAME = #{name},
		C_PARENT_ID = #{parentId},
		C_RES_CATALOG = #{resCatalog},
		C_SORT_ID = #{sortId},
		C_TAG1 = #{tag1},
		C_TAG2 = #{tag2},
		C_TAG3 = #{tag3},
		C_TAG4 = #{tag4},
		C_TREE_LEVEL = #{treeLevel},
		C_TREE_NODE_ID = #{treeNodeId},
		C_VENDOR_ID = #{vendorId}
		WHERE C_ID = #{id}
    </update>

	<!-- Delete POJO object by ID -->
	<delete id="delete_by_id" parameterType="string">
		DELETE FROM t_moni_res_type WHERE C_ID = #{id}
    </delete>

	<!-- Delete all POJO object -->
	<delete id="delete_all">
		DELETE FROM t_moni_res_type
    </delete>

	<!-- Delete POJO object by query -->
	<delete id="delete_by_query" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo">
		DELETE FROM t_moni_res_type
		<include refid="Query_Where_Clause" />
	</delete>

	<!-- Select POJO object by ID -->
	<select id="select_by_id" parameterType="string" resultMap="resTypeResultMap">
		SELECT C_ICON, C_ID, C_IS_MAIN, C_NAME, C_PARENT_ID, C_RES_CATALOG,
		C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4, C_TREE_LEVEL,
		C_TREE_NODE_ID, C_VENDOR_ID
		FROM t_moni_res_type
		WHERE C_ID = #{id}
    </select>

	<!-- Select POJO object by query -->
	<select id="select_one_by_query" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo"
		resultMap="resTypeResultMap">
		SELECT C_ICON, C_ID, C_IS_MAIN, C_NAME, C_PARENT_ID, C_RES_CATALOG,
		C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4, C_TREE_LEVEL,
		C_TREE_NODE_ID, C_VENDOR_ID
		FROM t_moni_res_type
		<include refid="Query_Where_Clause" />
	</select>

	<!-- Select All POJO object -->
	<select id="select_all" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo"
		resultMap="resTypeResultMap">
		SELECT C_ICON, C_ID, C_IS_MAIN, C_NAME, C_PARENT_ID,C_RES_CATALOG,
		C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4, C_TREE_LEVEL,
		C_TREE_NODE_ID, C_VENDOR_ID
		FROM t_moni_res_type
		<trim prefix="ORDER BY">
			<if test="orderBy != null and orderBy != ''">
				${orderBy}
			           </if>
		</trim>
	</select>

	<!-- Select POJO object list by query -->
	<select id="select_list_by_query" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo"
		resultMap="resTypeResultMap">
		SELECT C_ICON, C_ID, C_IS_MAIN, C_NAME, C_PARENT_ID,C_RES_CATALOG,
		C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4, C_TREE_LEVEL,
		C_TREE_NODE_ID, C_VENDOR_ID
		FROM t_moni_res_type
		<include refid="Query_Where_Clause" />
		<trim prefix="ORDER BY">
			<if test="orderBy != null and orderBy != ''">
				${orderBy}
			           </if>
		</trim>
	</select>

	<!-- Select POJO object collection for page by query -->
	<select id="select_pagelist_by_query" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo"
		resultMap="resTypeResultMap">
		SELECT C_ICON, C_ID, C_IS_MAIN, C_NAME, C_PARENT_ID,C_RES_CATALOG,
		C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4, C_TREE_LEVEL,
		C_TREE_NODE_ID, C_VENDOR_ID
		FROM t_moni_res_type
		<include refid="Query_Where_Clause" />
		<trim prefix="ORDER BY">
			<if test="orderBy != null and orderBy != ''">
				${orderBy}
			           </if>
		</trim>
		limit ${startIndex}, ${pageSize}
	</select>
	
	<sql id="column_all">
		C_ICON, C_ID, C_IS_MAIN, C_NAME, C_PARENT_ID,C_RES_CATALOG,
		C_SORT_ID, C_TAG1, C_TAG2, C_TAG3, C_TAG4, C_TREE_LEVEL,
		C_TREE_NODE_ID, C_VENDOR_ID
	</sql>
	
	
	
	<select id="select_by_temp_id_include_child" parameterType="String" resultMap="resTypeResultMap">
		SELECT <include refid="column_all"/>
		FROM
		t_moni_res_type 
		WHERE
		c_tree_node_id like CONCAT( (SELECT c_tree_node_id
		FROM
		t_moni_res_type
		WHERE
		c_id=#{value}) ,'%') 
		ORDER BY C_TREE_LEVEL,C_TREE_NODE_ID
    </select>
    <select id="select_by_level_with_sub_level" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo"
		resultMap="resTypeResultMap">
		SELECT <include refid="column_all"/>
		FROM t_moni_res_type
		WHERE c_tree_level>= #{treeLevel ,jdbcType=SMALLINT} AND (c_res_catalog NOT IN('BIZ','SCRIPT') OR c_res_catalog IS NULL)
			<if test="isMain !=0 ">
				AND C_IS_MAIN = #{isMain ,jdbcType=TINYINT}
		    </if>
		order by c_tree_level,c_sort_id
	</select>
	
	<select id="select_hasMainRes_by_treeLevel" parameterType="map" resultMap="resTypeResultMap">
		<include refid="v_sel_distict_res_type"/>
		INNER JOIN t_res_instance_info res ON res.c_tree_node_id LIKE CONCAT(t.c_tree_node_id, '%') AND t.c_tree_level > 0
		WHERE res.C_POLICY_TYPE = 'RES'
		<if test="treeLevel != null and treeLevel != 0">
			AND t.C_TREE_LEVEL = #{treeLevel ,jdbcType=SMALLINT}
        </if>
    </select>
    
    
    <select id="select_res_type_list_by_biz_id" parameterType="com.riil.base.resmodel.pojo.base.ResTypeBaseQueryParam"
		resultMap="resTypeResultMap">
		<include refid="v_sel_distict_res_type"/>	
		INNER JOIN <include refid="v_biz_res_weight" /> res ON res.c_biz_id=#{bizId} AND res.c_tree_node_id LIKE
		CONCAT(t.c_tree_node_id, '%')		
		WHERE
		c_tree_level >=1 AND c_is_main = 1 
		<if test="treeLevel != null and treeLevel != ''">
				AND C_TREE_LEVEL = #{treeLevel ,jdbcType=SMALLINT}
            </if>
		<if test="notInIds !=null and notInIds.size() >0 ">
			AND (t.c_res_catalog IS NULL OR t.c_res_catalog NOT IN
			<foreach item="item" index="index" collection="notInIds" open="(" separator="," close=")">
				#{item}
		    </foreach> 
		    )
		</if>
		ORDER BY C_TREE_LEVEL,C_TREE_NODE_ID
	</select>
	
	<select id="select_sub_temp_with_res_num" parameterType="string" resultMap="resTypeResultMap">
		SELECT t.c_id, t.c_name, COUNT(sub.c_id) AS c_res_num_monitor
		FROM t_moni_res_type t, t_res_instance_sub sub
		WHERE sub.C_RES_TYPE_ID = t.c_id AND sub.c_inst_id = #{mainResId}
		GROUP BY t.c_id, t.c_name
	</select>
    
    
    <select id="select_ResTree-ResNum_SysAdmin" parameterType="com.riil.base.resource.param.DomainParam"
		resultMap="resTypeResultMap">
	<include refid="select_ResTree-ResNum"/>
	INNER JOIN
		(SELECT SUM(1) AS c_res_num, t3.c_tree_node_id
			FROM t_moni_res_type t3
			INNER JOIN t_res_instance_info res ON res.c_tree_node_id = t3.c_tree_node_id 
				and t3.c_is_main = 1  AND t3.c_tree_level > 0
			<if test="isManaged == 1">
			INNER JOIN t_moni_policy_res_rel prr ON res.c_id = prr.c_inst_id AND prr.c_is_main = 1
			INNER JOIN t_moni_policy_info pi ON pi.c_id = prr.c_policy_id AND pi.c_policy_type=res.c_policy_type  AND pi.c_in_use = 1
			</if>
			<if test="availStatus != null and availStatus != 0">
			LEFT JOIN t_data_latest l ON res.c_id = l.c_inst_id AND l.c_metric_id = 'AvailStatus' AND (l.c_sub_inst_id IS NULL OR l.c_sub_inst_id = '')
			</if>
			<where>
			<include refid="resBaseParam_condition"/>
			<include refid="resTreeParam_condition"/>
			<if test="domainId !=null ">AND res.c_domain_id = #{domainId ,jdbcType=VARCHAR}</if>
			</where>
			GROUP BY t3.c_tree_node_id
		) c <!-- 查询符合条件的模板（叶子）及资源个数统计 -->
	ON c.c_tree_node_id LIKE CONCAT(t.c_tree_node_id, '%')
	<where>
	<if test="treeLevel != null and treeLevel != 0">
		AND t.C_TREE_LEVEL = #{treeLevel ,jdbcType=SMALLINT}
    </if>
    </where>
	<include refid="groupByID"/>
	ORDER BY t.C_TREE_LEVEL,t.C_TREE_NODE_ID
	</select>
    
    
    <select id="select_ResTree-ResNum_DomainAdmin" parameterType="com.riil.base.resource.param.DomainParam"
		resultMap="resTypeResultMap">
	<include refid="select_ResTree-ResNum"/>
	INNER JOIN
		(SELECT COUNT(DISTINCT res.c_id) AS c_res_num, t3.c_tree_node_id
			FROM t_moni_res_type t3
			INNER JOIN t_res_instance_info res ON res.c_tree_node_id = t3.c_tree_node_id 
				and t3.c_is_main = 1  AND t3.c_tree_level > 0  
			<if test="isManaged == 1">
			INNER JOIN t_moni_policy_res_rel prr ON res.c_id = prr.c_inst_id AND prr.c_is_main = 1
			INNER JOIN t_moni_policy_info pi ON pi.c_id = prr.c_policy_id AND pi.c_policy_type=res.c_policy_type  AND pi.c_in_use = 1
			</if>
			<if test="availStatus != null and availStatus != 0">
			LEFT JOIN t_data_latest l ON res.c_id = l.c_inst_id AND l.c_metric_id = 'AvailStatus' AND (l.c_sub_inst_id IS NULL OR l.c_sub_inst_id = '')
			</if>
			<where>
			<include refid="resBaseParam_condition"/>
			<include refid="resTreeParam_condition"/>
			<if test="domainId !=null ">AND res.c_domain_id = #{domainId ,jdbcType=VARCHAR}</if>
			<if test="domainId ==null ">AND res.c_domain_id IN <include refid="foreachDomainIds"/></if>
			</where>
			GROUP BY t3.c_tree_node_id
		) c <!-- 查询符合条件的模板（叶子）及资源个数统计 -->
	ON c.c_tree_node_id LIKE CONCAT(t.c_tree_node_id, '%')
	<where>
	<if test="treeLevel != null and treeLevel != 0">
		AND t.C_TREE_LEVEL = #{treeLevel ,jdbcType=SMALLINT}
    </if>
    </where>
	<include refid="groupByID"/>
	ORDER BY t.C_TREE_LEVEL,t.C_TREE_NODE_ID
	</select>
	
	<select id="select_ResTree-ResNum_User" parameterType="com.riil.base.resource.param.DomainParam"
		resultMap="resTypeResultMap">
	<include refid="select_ResTree-ResNum"/>
	INNER JOIN
<!-- 		(SELECT SUM(1) AS c_res_num, t3.c_tree_node_id -->
		(SELECT COUNT(DISTINCT res.c_id) AS c_res_num, t3.c_tree_node_id
			FROM t_moni_res_type t3
			INNER JOIN t_res_instance_info res ON res.c_tree_node_id = t3.c_tree_node_id 
				and t3.c_is_main = 1  AND t3.c_tree_level > 0  
			<if test="isManaged == 1">
			INNER JOIN t_moni_policy_res_rel prr ON res.c_id = prr.c_inst_id AND prr.c_is_main = 1
			INNER JOIN t_moni_policy_info pi ON pi.c_id = prr.c_policy_id AND pi.c_policy_type=res.c_policy_type  AND pi.c_in_use = 1
			</if>
			<if test="availStatus != null and availStatus != 0">
			LEFT JOIN t_data_latest l ON res.c_id = l.c_inst_id AND l.c_metric_id = 'AvailStatus' AND (l.c_sub_inst_id IS NULL OR l.c_sub_inst_id = '')
			</if>
			INNER JOIN t_admin_group_res_list grl ON res.c_id = grl.c_res_id 
			<where>
			res.c_res_catalog != 'Other'
			<include refid="resBaseParam_condition"/>
			<include refid="resTreeParam_condition"/>
			<if test="groupIds !=null and (!groupIds.isEmpty()) ">AND grl.c_group_id IN <include refid="foreachGroupIds"/></if> 
			</where>
			GROUP BY t3.c_tree_node_id
		) c <!-- 查询符合条件的模板（叶子）及资源个数统计 -->
	ON c.c_tree_node_id LIKE CONCAT(t.c_tree_node_id, '%')
	<where>
	<if test="treeLevel != null and treeLevel != 0">
		AND t.C_TREE_LEVEL = #{treeLevel ,jdbcType=SMALLINT}
    </if>
    </where>
	<include refid="groupByID"/>
	ORDER BY t.C_TREE_LEVEL,t.C_TREE_NODE_ID
	</select>
    
    
    <select id="select_ResTree-ResNum-NotInDomain" parameterType="com.riil.base.resource.param.DomainParam"
		resultMap="resTypeResultMap">
		<include refid="select_Temp-ResNum"/>
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		AND res.C_POLICY_TYPE = 'RES'
		AND ( res.C_DOMAIN_ID is NULL OR res.C_DOMAIN_ID='' )
		</trim>
		<include refid="groupByID"/>
		ORDER BY t.C_TREE_LEVEL,t.C_TREE_NODE_ID
	</select>
	
	<select id="select_ResTree_ByResGroupId" parameterType="com.riil.base.resource.param.DomainParam" resultMap="resTypeResultMap">
	<include refid="select_Temp"/>
		FROM t_moni_res_type t
		INNER JOIN t_res_instance_info res ON res.c_tree_node_id LIKE CONCAT(t.c_tree_node_id, '%') AND t.c_tree_level > 0
		INNER JOIN t_admin_res_group_rel rgl ON rgl.c_res_id = res.c_id
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		<if test="resGroupId !=null ">AND rgl.c_res_group_id = #{resGroupId ,jdbcType=VARCHAR}</if>
		<if test="domainId !=null ">AND res.c_domain_id = #{domainId ,jdbcType=VARCHAR}</if>
		</trim>
		ORDER BY t.C_TREE_LEVEL,t.C_TREE_NODE_ID
	</select>
	
	<select id="select_CandidateResTree_ByResGroupId" parameterType="com.riil.base.resource.param.DomainParam" resultMap="resTypeResultMap">
		<include refid="select_Temp"/>
		FROM t_moni_res_type t
		INNER JOIN t_res_instance_info res ON res.c_tree_node_id LIKE CONCAT(t.c_tree_node_id, '%') AND t.c_tree_level > 0
		LEFT JOIN t_admin_res_group_rel rgl ON rgl.c_res_id = res.c_id
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		
		<if test="policyTypes != null and policyTypes.size() > 0">
			AND res.c_policy_type in
			<foreach item="item" index="index" collection="policyTypes" open="(" separator="," close=")">
				#{item}
		    </foreach> 
		
		</if>
		
		
		<if test="domainId !=null ">AND res.c_domain_id = #{domainId ,jdbcType=VARCHAR}</if>
		<if test="resGroupId !=null ">AND (rgl.c_res_group_id != #{resGroupId ,jdbcType=VARCHAR} OR rgl.c_res_group_id IS NULL)</if>
		</trim>
		ORDER BY t.C_TREE_LEVEL,t.C_TREE_NODE_ID
	</select>
	
	<select id="select_list_4res" parameterType="com.riil.base.resmodel.pojo.base.ResTypePojo" resultMap="resTypeResultMap">
		SELECT 
		  t.C_ICON,
		  t.C_ID,
		  t.C_IS_MAIN,
		  t.C_NAME,
		  t.C_PARENT_ID,
		  t.C_RES_CATALOG,
		  t.C_SORT_ID,
		  t.C_TAG1,
		  t.C_TAG2,
		  t.C_TAG3,
		  t.C_TAG4,
		  t.C_TREE_LEVEL,
		  t.C_TREE_NODE_ID,
		  t.C_VENDOR_ID 
		FROM t_moni_res_type t
		<include refid="Query_Where_Clause" />
		AND (c_res_catalog NOT IN('BIZ','SCRIPT') OR c_res_catalog IS NULL)
		ORDER BY C_TREE_LEVEL,C_TREE_NODE_ID
	</select>
	
</mapper>
