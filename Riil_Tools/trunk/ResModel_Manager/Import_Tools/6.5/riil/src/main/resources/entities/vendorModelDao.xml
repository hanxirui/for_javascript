<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.riil.base.resmodel.impl.db.dao.VendorModelDao">

	<resultMap id="vendorModelResultMap" type="com.riil.base.resmodel.pojo.vendor.VendorModelPojo">
		<result property="id" column="C_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="tag1" column="C_TAG1" javaType="string" jdbcType="VARCHAR" />
		<result property="tag2" column="C_TAG2" javaType="string" jdbcType="VARCHAR" />
		<result property="tag3" column="C_TAG3" javaType="string" jdbcType="VARCHAR" />
		<result property="tag4" column="C_TAG4" javaType="string" jdbcType="VARCHAR" />
		<result property="vendorId" column="C_VENDOR_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="series" column="C_SERIES" javaType="string" jdbcType="VARCHAR" />
		<result property="modelNumber" column="C_MODEL_NUMBER" javaType="string" jdbcType="VARCHAR" />
		<result property="vendorName" column="C_VENDOR_NAME" javaType="string" jdbcType="VARCHAR" />
		<result property="vendorIcon" column="C_VENDOR_ICON" javaType="string" jdbcType="VARCHAR" />
		<result property="modelIcon" column="C_MODEL_ICON" javaType="string" jdbcType="VARCHAR" />
		<result property="resNumMonitor" column="C_RES_NUM_MONITOR" javaType="_int" jdbcType="INTEGER" />
		<result property="resNumUmmonitor" column="C_RES_NUM_UMMONITOR" javaType="_int" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Query_Where_Clause">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="vendorId != null and vendorId !=''">
				AND C_VENDOR_ID = #{vendorId ,jdbcType=VARCHAR}
            </if>
			<if test="series != null and series !=''">
				AND C_SERIES = #{series ,jdbcType=VARCHAR}
            </if>
			<if test="modelNumber != null and modelNumber !=''">
				AND C_SERIES = #{modelNumber ,jdbcType=VARCHAR}
            </if>
		</trim>
	</sql>

	<!-- Insert POJO object -->
	<insert id="insert" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo">
		INSERT INTO t_vendor_model ( C_ID, C_SERIES, C_MODEL_NUMBER, C_TAG1, C_TAG2,
		C_TAG3, C_TAG4, C_VENDOR_ID, C_VENDOR_NAME,C_VENDOR_ICON,C_MODEL_ICON
		)
		VALUES( #{id ,jdbcType=VARCHAR}, #{series ,jdbcType=VARCHAR}, #{modelNumber ,jdbcType=VARCHAR},
		#{tag1 ,jdbcType=VARCHAR}, #{tag2 ,jdbcType=VARCHAR}, #{tag3 ,jdbcType=VARCHAR}, #{tag4 ,jdbcType=VARCHAR},
		#{vendorId ,jdbcType=VARCHAR}, #{vendorName ,jdbcType=VARCHAR} , #{vendorIcon ,jdbcType=VARCHAR}, #{modelIcon ,jdbcType=VARCHAR} )
    </insert>
	<!--batch Insert POJO object -->
	<insert id="batchInsert" parameterType="list">
		INSERT INTO t_vendor_model ( C_ID, C_SERIES, C_MODEL_NUMBER, C_TAG1,
		C_TAG2, C_TAG3, C_TAG4, C_VENDOR_ID,
		C_VENDOR_NAME,C_VENDOR_ICON,C_MODEL_ICON )
		VALUES
		<foreach collection="list" item="item" separator=",">
			( #{item.id}, #{item.series}, #{item.modelNumber},
			#{item.tag1},
			#{item.tag2}, #{item.tag3}, #{item.tag4}, #{item.vendorId},
			#{item.vendorName} , #{item.vendorIcon},
			#{item.modelIcon} )
		</foreach>
	</insert>
	<!-- Update POJO object by ID -->
	<update id="update_by_id" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo">
		UPDATE t_vendor_model
		SET C_ID = #{id ,jdbcType=VARCHAR},
		C_SERIES=#{series ,jdbcType=VARCHAR},
		C_MODEL_NUMBER
		= #{modelNumber ,jdbcType=VARCHAR},
		C_TAG1 = #{tag1 ,jdbcType=VARCHAR},
		C_TAG2 = #{tag2 ,jdbcType=VARCHAR},
		C_TAG3 = #{tag3 ,jdbcType=VARCHAR},
		C_TAG4 = #{tag4 ,jdbcType=VARCHAR},
		C_VENDOR_ID = #{vendorId ,jdbcType=VARCHAR},
		C_VENDOR_NAME = #{vendorName ,jdbcType=VARCHAR} ,
		C_VENDOR_ICON = #{vendorIcon ,jdbcType=VARCHAR},
		C_MODEL_ICON = #{modelIcon ,jdbcType=VARCHAR}
		WHERE C_ID = #{id ,jdbcType=VARCHAR}
    </update>

	<!-- Delete POJO object by ID -->
	<delete id="delete_by_id" parameterType="string">
		DELETE FROM t_vendor_model WHERE C_ID = #{id ,jdbcType=VARCHAR}
    </delete>

	<!-- Delete all POJO object -->
	<delete id="delete_all">
		DELETE FROM t_vendor_model
    </delete>

	<!-- Delete POJO object by query -->
	<delete id="delete_by_query" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo">
		DELETE FROM t_vendor_model
		<include refid="Query_Where_Clause" />
	</delete>

	<!-- Select POJO object by ID -->
	<select id="select_by_id" parameterType="string" resultMap="vendorModelResultMap">
		SELECT C_ID, C_SERIES, C_MODEL_NUMBER, C_TAG1,
		C_TAG2, C_TAG3, C_TAG4,
		C_VENDOR_ID, C_VENDOR_NAME ,C_VENDOR_ICON,C_MODEL_ICON
		FROM t_vendor_model
		WHERE C_ID = #{id ,jdbcType=VARCHAR}
	</select>


	<!-- Select All POJO object -->
	<select id="select_all" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo" resultMap="vendorModelResultMap">
		SELECT
		C_ID, C_SERIES, C_MODEL_NUMBER, C_TAG1, C_TAG2, C_TAG3, C_TAG4,
		C_VENDOR_ID, C_VENDOR_NAME ,C_VENDOR_ICON,C_MODEL_ICON
		FROM t_vendor_model
		ORDER BY c_sort_id,C_VENDOR_NAME, C_SERIES, C_MODEL_NUMBER
    </select>

	<!-- Select POJO object list by query -->
	<select id="select_list_by_query" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo" resultMap="vendorModelResultMap">
		SELECT C_ID, C_SERIES, C_MODEL_NUMBER, C_TAG1, C_TAG2, C_TAG3, C_TAG4,
		C_VENDOR_ID, C_VENDOR_NAME
		,C_VENDOR_ICON,C_MODEL_ICON
		FROM t_vendor_model
		<include refid="Query_Where_Clause" />
		ORDER BY c_sort_id,C_VENDOR_NAME, C_SERIES, C_MODEL_NUMBER
	</select>
	<!-- Select POJO object list by query -->
	<select id="select_vendors" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo" resultMap="vendorModelResultMap">
		SELECT
		distinct C_VENDOR_ID, C_VENDOR_NAME ,C_VENDOR_ICON
		FROM t_vendor_model
		ORDER BY C_VENDOR_NAME
    </select>
    	<!-- select_vendor_by_vendor_id -->
	<select id="select_vendor_by_vendor_id" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo" resultMap="vendorModelResultMap">
		SELECT
		distinct C_VENDOR_ID, C_VENDOR_NAME ,C_VENDOR_ICON
		FROM t_vendor_model
		<include refid="Query_Where_Clause"/>
		<include refid="limit_one" />
    </select>
    
	<!-- Select POJO object list by query -->
	<select id="select_seriess" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo" resultMap="vendorModelResultMap">
		SELECT distinct C_VENDOR_ID, C_VENDOR_NAME ,C_VENDOR_ICON, C_SERIES
		FROM t_vendor_model
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="vendorId != null and vendorId != ''">
				AND C_VENDOR_ID = #{vendorId ,jdbcType=VARCHAR}
			            </if>
			<if test="series != null and series != ''">
				AND C_SERIES = #{series ,jdbcType=VARCHAR}
			            </if>
		</trim>
		ORDER BY C_VENDOR_NAME, C_SERIES
	</select>

	<!-- Select POJO object collection for page by query -->
	<select id="select_pagelist_by_query" parameterType="com.riil.base.resmodel.pojo.vendor.VendorModelPojo"
		resultMap="vendorModelResultMap">
		<include refid="page_head"/>
		SELECT C_ID, C_SERIES, C_MODEL_NUMBER, C_TAG1, C_TAG2, C_TAG3, C_TAG4,
		C_VENDOR_ID, C_VENDOR_NAME
		,C_VENDOR_ICON,C_MODEL_ICON
		FROM t_vendor_model
		<include refid="Query_Where_Clause" />
		ORDER BY c_sort_id,C_VENDOR_NAME, C_SERIES, C_MODEL_NUMBER
		<include refid="page_foot"/>
	</select>

	<!-- select_vendors_with_res_num_by_domain -->
	<select id="select_vendors_with_res_num_by_domain" parameterType="map"
		resultMap="vendorModelResultMap">
		SELECT DISTINCT
		vendor.c_vendor_id,
		vendor.c_vendor_name,
		vendor.c_vendor_icon,
		children.count AS c_tag1,
		sort.c_sort_id
		FROM
		t_vendor_model vendor
		INNER JOIN(
		SELECT
		res.c_vendor_id,
		COUNT(res.c_id)AS COUNT
		FROM
		t_res_instance_info
		res
		<if test="domainIds !=null and (!domainIds.isEmpty()) ">
		WHERE
		c_domain_id IN <include refid="foreachDomainIds"/>
		</if>
		GROUP BY
		res.c_vendor_id
		)children ON vendor.c_vendor_id = children.c_vendor_id
		LEFT
		JOIN(
		SELECT
		c_vendor_id,
		MAX(c_sort_id)AS c_sort_id
		FROM
		t_vendor_model
		GROUP BY
		c_vendor_id
		)sort ON vendor.c_vendor_id =
		sort.c_vendor_id
		ORDER BY
		C_VENDOR_NAME
    </select>
    <sql id="foreachDomainIds">
		<foreach collection="domainIds" item="item" open="(" separator="," close=")">
			#{item}
        </foreach>
	</sql>
    
    <sql id="select_Vendor_ID_NAME">
    SELECT DISTINCT	v.C_VENDOR_ID,	v.C_VENDOR_NAME, v.C_SORT_ID
    </sql>
    
    <select id="select_hasResVendor_ByResGroupId" parameterType="map" resultMap="vendorModelResultMap">
    <include refid="select_Vendor_ID_NAME"/>
	FROM t_vendor_model  v
	INNER JOIN t_res_instance_info res ON res.c_vendor_id=v.C_VENDOR_ID AND res.C_SERIES=v.C_SERIES
	INNER JOIN t_admin_res_group_rel rgl ON rgl.c_res_id = res.c_id
	<trim prefix="WHERE" prefixOverrides="AND | OR">
	<if test="resGroupId !=null ">AND rgl.c_res_group_id = #{resGroupId ,jdbcType=VARCHAR}</if>
	<if test="domainId !=null ">AND res.c_domain_id = #{domainId ,jdbcType=VARCHAR}</if>
	</trim>
	ORDER BY v.C_SORT_ID, v.C_VENDOR_NAME
    </select>
    
    <select id="select_hasCandidateResVendor_ByResGroupId" parameterType="map" resultMap="vendorModelResultMap">
    <include refid="select_Vendor_ID_NAME"/>
	FROM t_vendor_model  v
	INNER JOIN t_res_instance_info res ON res.c_vendor_id=v.C_VENDOR_ID AND res.C_SERIES=v.C_SERIES
	LEFT JOIN t_admin_res_group_rel rgl ON rgl.c_res_id = res.c_id
	<trim prefix="WHERE" prefixOverrides="AND | OR">
	AND res.c_policy_type = 'RES'
	<if test="domainId !=null ">AND res.c_domain_id = #{domainId ,jdbcType=VARCHAR}</if>
	<if test="resGroupId !=null ">AND (rgl.c_res_group_id != #{resGroupId ,jdbcType=VARCHAR} OR rgl.c_res_group_id IS NULL)</if>
	</trim>
	ORDER BY v.C_SORT_ID, v.C_VENDOR_NAME
    </select>
    
     <select id="select_by_tree_node_id" parameterType="map"
		resultMap="vendorModelResultMap">
		SELECT
			v.C_ID,
			v.C_VENDOR_ID,
			v.C_VENDOR_NAME,
			v.C_SERIES,
			v.C_MODEL_NUMBER,
			v.C_VENDOR_ICON,
			v.C_MODEL_ICON,
			v.C_TAG1,
			v.C_TAG2,
			v.C_TAG3,
			v.C_TAG4,
			v.c_sort_id FROM t_vendor_model  v
			INNER JOIN(SELECT DISTINCT c_vendor_id,C_SERIES FROM t_res_instance_info WHERE c_tree_node_id like <include refid="func_concat_1" /> #{treeNodeId}<include refid="func_concat_2" />  )r ON r.c_vendor_id=v.C_VENDOR_ID AND r.C_SERIES=v.C_SERIES
		ORDER BY C_SORT_ID,C_VENDOR_NAME

	</select>
</mapper>
