<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.riil.base.policy.impl.dao.PolicyThresholdDAO">

	<resultMap id="PolicyThresholdResultMap" type="com.riil.base.resmodel.pojo.policy.PolicyThresholdPojo">
		<result property="exp1" column="C_EXP1" javaType="string" jdbcType="VARCHAR" />
		<result property="exp2" column="C_EXP2" javaType="string" jdbcType="VARCHAR" />
		<result property="exp3" column="C_EXP3" javaType="string" jdbcType="VARCHAR" />
		<result property="expDesc1" column="C_EXP_DESC1" javaType="string" jdbcType="VARCHAR" />
		<result property="expDesc2" column="C_EXP_DESC2" javaType="string" jdbcType="VARCHAR" />
		<result property="expDesc3" column="C_EXP_DESC3" javaType="string" jdbcType="VARCHAR" />
		<result property="id" column="C_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="metricId" column="C_METRIC_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="policyId" column="C_POLICY_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="tag1" column="C_TAG1" javaType="string" jdbcType="VARCHAR" />
		<result property="tag2" column="C_TAG2" javaType="string" jdbcType="VARCHAR" />
		<result property="dayOrWeek" column="C_DAY_OR_WEEK" javaType="string" jdbcType="VARCHAR" />
		<result property="weeks" column="C_WEEKS" javaType="string" jdbcType="VARCHAR" />
		<result property="startTime" column="C_START_TIME" javaType="string" jdbcType="VARCHAR" />
		<result property="endTime" column="C_END_TIME" javaType="string" jdbcType="VARCHAR" />
		<!-- <result property="timeExp" column="C_TIME_EXP" javaType="string" jdbcType="VARCHAR" /> -->
	</resultMap>
	<!-- Insert POJO object -->
	<insert id="insert" parameterType="com.riil.base.resmodel.pojo.policy.PolicyThresholdPojo">
		INSERT INTO t_moni_policy_threshold ( C_DAY_OR_WEEK, C_END_TIME, C_EXP1,
		C_EXP2, C_EXP3, C_EXP_DESC1, C_EXP_DESC2, C_EXP_DESC3, C_ID,
		C_METRIC_ID, C_POLICY_ID, C_START_TIME, C_TAG1, C_TAG2,
		C_WEEKS )
		VALUES( #{dayOrWeek ,jdbcType=VARCHAR}, #{endTime ,jdbcType=VARCHAR}, #{exp1 ,jdbcType=VARCHAR}, #{exp2 ,jdbcType=VARCHAR}, #{exp3 ,jdbcType=VARCHAR},
		#{expDesc1 ,jdbcType=VARCHAR}, #{expDesc2 ,jdbcType=VARCHAR}, #{expDesc3 ,jdbcType=VARCHAR}, #{id ,jdbcType=VARCHAR},
		#{metricId ,jdbcType=VARCHAR},
		#{policyId ,jdbcType=VARCHAR}, #{startTime ,jdbcType=VARCHAR}, #{tag1 ,jdbcType=VARCHAR}, #{tag2 ,jdbcType=VARCHAR}, #{weeks ,jdbcType=VARCHAR} )
    </insert>

	<!-- Update POJO object by ID -->
	<update id="update_by_id" parameterType="com.riil.base.resmodel.pojo.policy.PolicyThresholdPojo">
		UPDATE t_moni_policy_threshold
		SET C_DAY_OR_WEEK = #{dayOrWeek ,jdbcType=VARCHAR},
		C_END_TIME = #{endTime ,jdbcType=VARCHAR},
		C_EXP1 = #{exp1 ,jdbcType=VARCHAR},
		C_EXP2 = #{exp2 ,jdbcType=VARCHAR},
		C_EXP3 = #{exp3 ,jdbcType=VARCHAR},
		C_EXP_DESC1 = #{expDesc1 ,jdbcType=VARCHAR},
		C_EXP_DESC2 =
		#{expDesc2 ,jdbcType=VARCHAR},
		C_EXP_DESC3 = #{expDesc3 ,jdbcType=VARCHAR},
		C_ID = #{id ,jdbcType=VARCHAR},
		C_METRIC_ID = #{metricId ,jdbcType=VARCHAR},
		C_POLICY_ID = #{policyId ,jdbcType=VARCHAR},
		C_START_TIME =
		#{startTime ,jdbcType=VARCHAR},
		C_TAG1 = #{tag1 ,jdbcType=VARCHAR},
		C_TAG2 = #{tag2 ,jdbcType=VARCHAR},
		C_WEEKS = #{weeks ,jdbcType=VARCHAR}
		WHERE C_ID = #{id ,jdbcType=VARCHAR}
    </update>
	<update id="update_by_policyIdAndMetricId" parameterType="com.riil.base.resmodel.pojo.policy.PolicyThresholdPojo">
		UPDATE t_moni_policy_threshold
		SET C_DAY_OR_WEEK =
		#{dayOrWeek ,jdbcType=VARCHAR},
		C_END_TIME = #{endTime ,jdbcType=VARCHAR},
		C_EXP1 = #{exp1 ,jdbcType=VARCHAR},
		C_EXP2 = #{exp2 ,jdbcType=VARCHAR},
		C_EXP3 = #{exp3 ,jdbcType=VARCHAR},
		C_EXP_DESC1 = #{expDesc1 ,jdbcType=VARCHAR},
		C_EXP_DESC2 = #{expDesc2 ,jdbcType=VARCHAR},
		C_EXP_DESC3 = #{expDesc3 ,jdbcType=VARCHAR},
		C_ID = #{id ,jdbcType=VARCHAR},
		C_METRIC_ID = #{metricId ,jdbcType=VARCHAR},
		C_POLICY_ID = #{policyId ,jdbcType=VARCHAR},
		C_START_TIME = #{startTime ,jdbcType=VARCHAR},
		C_TAG1 = #{tag1 ,jdbcType=VARCHAR},
		C_TAG2 = #{tag2 ,jdbcType=VARCHAR},
		C_WEEKS = #{weeks ,jdbcType=VARCHAR}
		WHERE C_POLICY_ID = #{policyId ,jdbcType=VARCHAR} AND
		C_METRIC_ID = #{metricId ,jdbcType=VARCHAR}
    </update>
    <!-- Insert POJO object -->
	<insert id="batchInsert" parameterType="list">
		INSERT INTO t_moni_policy_threshold ( C_EXP1, C_EXP2, C_EXP3,
		C_EXP_DESC1, C_EXP_DESC2, C_EXP_DESC3, C_ID, C_METRIC_ID,
		C_POLICY_ID, C_TAG1, C_TAG2, C_DAY_OR_WEEK, C_WEEKS, C_START_TIME,
		C_END_TIME)
		VALUES
		<foreach collection="list" item="threshold" separator=",">
			(
			#{threshold.exp1}, #{threshold.exp2},
			#{threshold.exp3},
			#{threshold.expDesc1}, #{threshold.expDesc2}, #{threshold.expDesc3},
			#{threshold.id}, #{threshold.metricId},
			#{threshold.policyId}, #{threshold.tag1},
			#{threshold.tag2}, #{threshold.dayOrWeek}, #{threshold.weeks},
			#{threshold.startTime},
			#{threshold.endTime} )
		</foreach>
	</insert>
	<!-- Insert POJO object -->
	<insert id="batchInsertThreshold" parameterType="java.util.Map">
		INSERT INTO t_moni_policy_threshold ( C_EXP1, C_EXP2, C_EXP3,
		C_EXP_DESC1, C_EXP_DESC2, C_EXP_DESC3, C_ID, C_METRIC_ID,
		C_POLICY_ID, C_TAG1, C_TAG2, C_DAY_OR_WEEK, C_WEEKS, C_START_TIME,
		C_END_TIME)
		VALUES
		<foreach collection="thresholds" item="threshold" separator=",">
			(
			#{threshold.exp1}, #{threshold.exp2},
			#{threshold.exp3},
			#{threshold.expDesc1}, #{threshold.expDesc2}, #{threshold.expDesc3},
			#{threshold.id}, #{metricId ,jdbcType=VARCHAR},
			#{policyId ,jdbcType=VARCHAR}, #{threshold.tag1},
			#{threshold.tag2}, #{threshold.dayOrWeek}, #{threshold.weeks},
			#{threshold.startTime},
			#{threshold.endTime} )
		</foreach>
	</insert>


	<!-- Update POJO object by ID -->
	<update id="updateThreshold_newPolicyId_by_oriPolicyId" parameterType="java.util.Map">
		UPDATE t_moni_policy_threshold
		SET
		C_POLICY_ID = #{oriPolicyId}
		WHERE C_POLICY_ID = #{newPolicyId}
    </update>

	<!-- Delete POJO object by ID -->
	<delete id="delete_by_policy_id_metric_id" parameterType="java.util.Map">
		DELETE
		FROM t_moni_policy_threshold WHERE C_POLICY_ID =
		#{policyId ,jdbcType=VARCHAR} AND
		C_METRIC_ID = #{metricId ,jdbcType=VARCHAR}
	</delete>

	<!-- Delete POJO object by ID -->
	<delete id="delete_by_policy_id" parameterType="string">
		DELETE FROM
		t_moni_policy_threshold WHERE C_POLICY_ID =
		#{policyId ,jdbcType=VARCHAR}
	</delete>

	<!-- Delete POJO object by ID -->
	<delete id="deleteThreshold_by_policyId_batch" parameterType="java.util.List">
		DELETE FROM t_moni_policy_threshold WHERE C_POLICY_ID IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
        </foreach>
	</delete>

	<!-- Select POJO object by ID -->
	<select id="select_by_policyId_metricId" parameterType="java.util.Map" resultMap="PolicyThresholdResultMap">
		SELECT
		t.c_exp1,
		t.c_exp2,
		t.c_exp3,
		t.c_exp_desc1,
		t.c_exp_desc2,
		t.c_exp_desc3,
		t.c_metric_id,
		t.c_policy_id,
		t.c_tag1,
		t.c_tag2,
		t.c_end_time,
		t.c_start_time,
		t.c_weeks,
		t.c_day_or_week,
		t.c_id
		FROM
		t_moni_policy_threshold t
		WHERE
		t.c_policy_id = #{policyId ,jdbcType=VARCHAR} AND
		t.C_METRIC_ID = #{metricId ,jdbcType=VARCHAR} ORDER BY C_START_TIME
    </select>
	<select id="select_by_policyId" parameterType="java.util.Map" resultMap="PolicyThresholdResultMap">
		SELECT
		t.c_exp1,
		t.c_exp2,
		t.c_exp3,
		t.c_exp_desc1,
		t.c_exp_desc2,
		t.c_exp_desc3,
		t.c_metric_id,
		t.c_policy_id,
		t.c_tag1,
		t.c_tag2,
		t.c_end_time,
		t.c_start_time,
		t.c_weeks,
		t.c_day_or_week,
		t.c_id
		FROM
		t_moni_policy_threshold t
		WHERE
		t.c_policy_id = #{policyId ,jdbcType=VARCHAR} 
    </select>
	<!-- Select POJO object list by query -->
	<select id="select_list_by_query" parameterType="com.riil.base.resmodel.pojo.policy.PolicyThresholdPojo"
		resultMap="PolicyThresholdResultMap">
		SELECT C_DAY_OR_WEEK, C_END_TIME, C_EXP1, C_EXP2, C_EXP3, C_EXP_DESC1,
		C_EXP_DESC2, C_EXP_DESC3, C_ID, C_METRIC_ID,
		C_POLICY_ID,
		C_START_TIME, C_TAG1, C_TAG2, C_WEEKS
		FROM t_moni_policy_threshold
		<trim prefix="ORDER BY">
			<if test="orderBy != null and orderBy != ''">
				${orderBy}
			           </if>
		</trim>
	</select>
</mapper>
