{
	"db": {
		"db_host": "172.17.160.191",
		"db_user": "root",
		"db_pass": "123456",
		"db_name":"resmodel",
		"db_limit":10
	},
	"role": [{
		"role_id": "developer",
		"role_name": "开发工程师",
		"role_style": "0"
	}, {
		"role_id": "stuff",
		"role_name": "维护工程师",
		"role_style": "1"
	}],
    "sql":{
        "t_moni_res_type.select":"SELECT c_id AS modelId, c_tree_node_id AS id, c_tree_node_id AS pId, c_name AS name, c_icon AS icon, null AS isMain, null AS resTypeId FROM t_moni_res_type;",
        "t_moni_res_type.select_by_id":"SELECT * FROM t_moni_res_type WHERE c_id = ?",
        "t_moni_res_type.insert":"INSERT INTO t_moni_res_type (c_id, c_parent_id, c_name, c_is_main, c_tree_level, c_tree_node_id, c_icon, c_vendor_id, c_sort_id) values (:c_id, :c_parent_id, :c_name, :c_is_main, :c_tree_level, :c_tree_node_id, :c_icon, :c_vendor_id, :c_sort_id)",
        "t_moni_res_type.update":"UPDATE t_moni_res_type SET c_id = :c_id, c_name = :c_name, c_vendor_id = :c_vendor_id WHERE c_id = :c_oldId",
        "t_moni_res_type.delete":"DELETE FROM t_moni_res_type WHERE c_id in (:ids)",

        "t_moni_res_type.select_by_parentid":"SELECT * FROM t_moni_res_type WHERE c_parent_id = ?",

        "t_moni_model_base.select":"SELECT c_id AS modelId, null AS id, c_tree_node_id AS pId, c_name AS name, null AS icon, c_is_main AS isMain, c_res_type_id AS resTypeId FROM t_moni_model_base WHERE c_is_main = ?",
        "t_moni_model_base.select_by_mainmodelid":"select c_id AS modelId, null AS id, null AS pId, c_name AS name, null AS icon, c_is_main AS isMain, c_res_type_id AS resTypeId FROM t_moni_model_base WHERE c_main_model_id = ?",
        "t_moni_model_base.select_by_id":"SELECT * FROM t_moni_model_base WHERE c_id = ?",
        "t_moni_model_base.insert":"INSERT INTO t_moni_model_base (c_id, c_res_type_id, c_name, c_desc, c_is_snmp, c_plugin_id, c_main_model_id, c_is_main, c_tree_node_id, c_vendor_id, c_vendor_name, c_precondition, c_connect_info_desc, c_tag1, c_tag2, c_tag3, c_tag4) VALUES(:c_id, :c_res_type_id, :c_name, :c_desc, :c_is_snmp, :c_plugin_id, :c_main_model_id, :c_is_main, :c_tree_node_id, :c_vendor_id, :c_vendor_name, :c_precondition, :c_connect_info_desc, :c_tag1, :c_tag2, :c_tag3, :c_tag4)",
        "t_moni_model_base.update":"UPDATE t_moni_model_base SET c_id = :c_id, c_res_type_id = :c_res_type_id, c_name = :c_name, c_desc = :c_desc, c_is_snmp = :c_is_snmp, c_plugin_id = :c_plugin_id WHERE c_id = :c_oldId",
        "t_moni_model_base.delete":"DELETE FROM t_moni_model_base WHERE c_id in (:ids)",

        "t_moni_model_base.select_plugin":"SELECT DISTINCT c_plugin_id FROM t_moni_model_base WHERE c_plugin_id != '' ORDER BY c_plugin_id ASC",

        "t_moni_metric_base.select":"SELECT metric.c_id AS metricId,metric.c_name AS metricName,metric.c_unit AS metricUnit,metric.c_data_type AS dataType,metric.c_metric_type AS metricType,metric.c_desc AS metricDesc,metric.c_is_custom AS isCustom,metric.c_user_id as metricUser,grouprel.c_metric_group_id AS groupRelId,grouprel.c_metric_id AS metricId,group_concat(mgroup.c_name) AS groupName,mgroup.c_id AS groupId FROM t_moni_metric_base AS metric,t_moni_metric_group_rel AS grouprel,t_moni_metric_group AS mgroup WHERE  metric.c_id = grouprel.c_metric_id AND mgroup.c_id = grouprel.c_metric_group_id GROUP BY metric.c_id;",
        "t_moni_metric_base.insert":"INSERT INTO t_moni_metric_base(c_id,c_name,c_desc,c_metric_type,c_unit,c_data_type,c_is_custom,c_user_id) VALUES(:metric_id,:metric_name,:metric_desc,:metric_type,:metric_unit,:metric_datatype,:metric_iscustom,:userid) ",
        "t_moni_metric_base.update":"UPDATE t_moni_metric_base SET c_name=:metric_name,c_desc=:metric_desc,c_metric_type=:metric_type,c_unit=:metric_unit,c_data_type=:metric_datatype,c_is_custom=:metric_iscustom,c_user_id=:metric_userid WHERE c_id =:metric_id",
        "t_moni_metric_group_rel.insert":"INSERT INTO t_moni_metric_group_rel(c_metric_group_id,c_metric_id) VALUES(:groupid,:metricid)",
        "t_moni_metric_group_rel.delete":"DELETE FROM t_moni_metric_group_rel where c_metric_id in (:metric_ids)",
        "t_moni_metric_base.delete":"DELETE FROM t_moni_metric_base WHERE c_id in (:ids)",
        "t_moni_metric_base.select_by_condation":"SELECT metric.c_id AS metricName,metric.c_name AS metricType,metric.c_unit AS metricUnit,metric.c_data_type AS dataType,metric.c_desc AS metricDesc,metric.c_is_custom AS isCustom,metric.c_user_id as metricUser,grouprel.c_metric_group_id AS groupRelId,grouprel.c_metric_id AS metricId,mgroup.c_name AS groupName,mgroup.c_id AS groupId FROM t_moni_metric_base AS metric,t_moni_metric_group_rel AS grouprel,t_moni_metric_group AS mgroup WHERE  metric.c_id = grouprel.c_metric_id AND mgroup.c_id = grouprel.c_metric_group_id  and metric.c_name=? and metric.c_metric_type=? and metric.c_id=?",
        "t_moni_metric_base.selectMetricName":"SELECT distinct c_name FROM t_moni_metric_base",
        "t_moni_metric_base.selectMetricType":"SELECT distinct c_metric_type FROM t_moni_metric_base",
        "t_moni_metric_group.select":"SELECT c_id as groupId,c_name as groupName,c_desc as groupDesc FROM t_moni_metric_group",
        "t_moni_metric_group.insert":"INSERT INTO t_moni_metric_group(c_id,c_name,c_desc) VALUES(:groupId,:groupName,:groupDesc)",
        "t_moni_metric_group.update":"UPDATE t_moni_metric_group SET c_id=:groupId,c_name=:groupName,c_desc=:groupDesc WHERE c_id=:groupId",
        "t_moni_metric_group.delete":"DELETE FROM t_moni_metric_group WHERE c_id in (:groupIds)",
        "t_moni_metric_group.selectById":"SELECT c_id as groupId,c_name as groupName,c_desc as groupDesc FROM t_moni_metric_group WHERE c_id=?",
        "t_moni_model_metric_rel.selectById":"SELECT c_model_id as modelId,c_metric_id as metricId,c_res_type_id as resTypeId FROM t_moni_model_metric_rel WHERE c_model_id=?",
        "t_moni_model_metric_rel.insert":"INSERT INTO t_moni_model_metric_rel(c_model_id,c_metric_id,c_res_type_id) VALUES(:modelid,:metricid,:restypeid)",
        "t_moni_metric_base.selectById":"SELECT metric.c_id AS metricId,metric.c_name AS metricName,metric.c_unit AS metricUnit,metric.c_data_type AS dataType,metric.c_metric_type AS metricType,metric.c_desc AS metricDesc,metric.c_is_custom AS isCustom,metric.c_user_id as metricUser,grouprel.c_metric_group_id AS groupRelId,grouprel.c_metric_id AS metricId,group_concat(mgroup.c_name) AS groupName,group_concat(mgroup.c_id) AS groupId FROM t_moni_metric_base AS metric,t_moni_metric_group_rel AS grouprel,t_moni_metric_group AS mgroup WHERE  metric.c_id = grouprel.c_metric_id AND mgroup.c_id = grouprel.c_metric_group_id AND metric.c_id=?",
        "t_moni_model_base.selectById":"SELECT modelMetricRel.c_metric_id AS metricId,metricBase.c_name AS metricName,IF (metricBindle.c_is_instance=1,'是','否') AS isInstance,IF (metricBindle.c_is_initvalue=1,'是','否')  AS isInitValue,IF (metricBindle.c_is_displayname=1,'是','否')  AS isDisplayName,SUBSTRING(modelMetricRel.c_model_id,1,8) AS modelId,collectCommand.c_protocol AS coltProtocol FROM t_moni_model_metric_rel AS modelMetricRel,t_moni_metric_base AS metricBase,t_moni_metricbinding AS metricBindle, t_moni_cmd AS collectCommand,t_moni_cmds_group AS collectCommandGroup WHERE modelMetricRel.c_model_id = ? AND metricBase.c_id = modelMetricRel.c_metric_id AND metricBindle.c_metric_id = modelMetricRel.c_metric_id  AND collectCommandGroup.c_metricbinding_id = metricBindle.c_id AND collectCommand.c_cmds_group_id = collectCommandGroup.c_id;"
    },
    "export":{
             "modelPath":"D:\\node.js\\resmodel\\sourcecode\\model",
             "batPath":"D:\\node.js\\resmodel\\sourcecode\\Riil_Tools\\export_tool",
             "batFileName":"export.bat"
    }
}